version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - USER=${USER}
        - UID=${UID}
    user: ${USER}
    container_name: app-payments
    restart: unless-stopped
    tty: true
    volumes:
      - ./:/var/www
    networks:
      - laravel

  queue:
      build:
        context: .
        dockerfile: Dockerfile
        args:
          - USER=${USER}
          - UID=${UID}
      user: ${USER}
      container_name: queue-worker
      restart: unless-stopped
      tty: true
      command: php artisan queue:work --verbose --tries=3 --timeout=90
      volumes:
        - ./:/var/www
      networks:
        - laravel
      depends_on:
        - redis

  nginx:
    container_name: webserver-nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8005:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks:
      - laravel

  mysql:
    container_name: database-mysql
    image: mysql:5.7.22
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: payments
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_USER: root
    ports:
      - "3306:3306"
    networks:
      - laravel

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8001:8080
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass root --appendonly yes
    ports:
      - "8002:6379"
    networks:
      - laravel

networks:
  laravel:
    driver: bridge